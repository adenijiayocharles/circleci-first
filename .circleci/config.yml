version: 2.1
commands:
  print_pipeline_id:
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

defaults: &defaults
  docker:
    - image: cimg/base:2020.01

images: &images
  docker:
    - image: cimg/base:2020.01

jobs:
  say-hello:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  print-hello:
    <<: *defaults
    steps:
      - run:
          name: "Print Hello"
          command: "echo Hello"

  print-world:
    <<: *defaults
    steps:
      - run:
          name: "Print Nigeria"
          command: "echo world and this is my pipeline id << pipeline.id >>"

  print_name:
    <<: *defaults
    steps:
      - run:
          name: "Print environment variable in project settings"
          command: |
            echo $MY_NAME
            echo $MY_SCHOOL

  save_hello_word_output:
    <<: *images
    steps:
      - run:
          name: "Print hello world to a file"
          command: |
            echo "this is the text output to the file after using defaults" >> output.txt
      - persist_to_workspace:
          root: ./
          paths:
            - output.txt
  print_to_workspace:
    <<: *images
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: "Read the contents of a file saved to the workspace in the save_hello_world_output job"
          command: |
            cat output.txt
  print_command_output:
    <<: *images
    steps:
      - print_pipeline_id

  when_catch_error:
    <<: *images
    steps:
      - run: exit 1
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print-hello
      - print-world:
          requires:
            - print-hello
      - print_name
      - save_hello_word_output
      - print_to_workspace:
          requires:
            - save_hello_word_output
      - print_command_output
      - when_catch_error
